{"version":3,"sources":["sections/inputs.js","sections/index.js","sections/facility.js","helperFunctions.js","AssessmentSection.js","Results.js","ResultsTable.js","App.js","serviceWorker.js","index.js"],"names":["q_1_1","id","text","type","subType","standards","q_3_01","q_3_02","q_3_03","q_3_04","q_3_05","q_3_06","q_3_07","q_3_08","q_3_09","sectionsMap","facility","title","instructions","questions","dataSource","children","tags","weight","recs","resources","subQs","inputs","requiresSetup","targets","sectionId","sectionName","sectionTargets","results","question","target","recommendations","numerator","denominator","departments","name","getTargetId","targetSectionId","targetId","getTableCellId","department","AssessmentSection","props","section","selectedDepts","state","contents","begun","warnings","toggleSubQs","bind","selectDept","removeDept","begin","processElement","getSection","getQTable","qs","this","targetData","generateQuestions","map","el","setState","sectionObj","sendMap","className","sect","i","key","getDeptSelection","getTargetSetting","getStartButton","getPreface","expectedValue","push","getQuestionBox","getQuestionYN","getQuestionPerc","console","error","content","_","Card","Header","Accordion","Toggle","as","Button","variant","eventKey","Collapse","Body","Table","striped","bordered","responsive","d","q","length","t","uid","dv","Form","Control","min","defaultValue","Check","label","Label","childEl","max","e","show","endsWith","slice","document","querySelector","classList","toggle","onChange","Group","inline","item","fourDepts","targetsComplete","every","tSection","value","val","Number","validTarget","isNaN","warningText","join","onClick","options","placeholder","avoidHighlightFirstOption","selectionLimit","showCheckbox","closeOnSelect","closeIcon","onSelect","onRemove","displayValue","idx","showContents","getInstructions","React","Component","Results","href","missedFQs","getMissedItem","ResultsTable","nearThreshhold","updateThreshhold","rSection","depts","keys","get","dStr","find","r","getResultRow","result","targetValue","actualPerc","responseData","responseValue","dep","getResponseCell","isPerc","perfClass","nearCutoff","Math","round","classes","threshhold","custom","getLegend","resultSections","getSectionTable","App","submitted","inputsResults","submit","filter","inputSectionObj","inputResultSections","forEach","responses","correctAnswerGiven","rSect","answered","yeses","each","resp","isNil","totalNum","totalDenom","numV","dept","perc","denomV","warn","set","submittedMessage","disabled","size","submitTitle","facilityTitle","inputsTitle","Tabs","defaultActiveKey","Tab","getFacilityTab","getInputsTab","getSubmitTab","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.cd7811e9.chunk.js","sourcesContent":["// section and preface may have children, q may have subQs\nconst types = ['q', 'section', 'preface'];\nconst subTypes = [\n  'box', 'y_n', '%', // for qs\n  'table' // for sections\n];\n\nconst title = 'Clinical Facility Data Inputs';\n\nconst instructions = [\n  'Clinical Facility Data Inputs instructions...',\n  'Before beggining this section, please select four departments to assess, as well as the target numbers.'\n];\n\nconst departments = [\n  { id: 'medi', name: 'Medical' },\n  { id: 'gene', name: 'General Surgery' },\n  { id: 'pedi', name: 'Pediatrics' },\n  { id: 'inte', name: 'Intensive Care Unit (Adult)' },\n  { id: 'obst', name: 'Obstetrics / Gynaecology' },\n  { id: 'emer', name: 'Emergency / Trauma' },\n  { id: 'neon', name: 'Neonatal Intensive Care Unit' },\n  { id: 'orth', name: 'Orthopeadics' },\n  { id: 'card', name: 'Cardiology' },\n  { id: 'pedi', name: 'Pediatric Intensive Care Unit' },\n  { id: 'neur', name: 'Neurology' },\n  { id: 'onco', name: 'Oncology' },\n  { id: 'burn', name: 'Burn Unit' },\n  { id: 'gast', name: 'Gastroenterology' },\n  { id: 'neph', name: 'Nephrology / Urology' },\n];\n\nconst targets = [\n  { sectionId: 'documentation', sectionName: 'Indicator: Documentation, Policies & Structures', sectionTargets: [\n    { id: 'guidelines', text: \"Percentage of departments that should have a copy of the current treatment guidelines\" },\n    { id: 'handbook', text: \"Percentage of departments that should have a copy of the current Laboratory Handbook\" },\n    { id: 'monitor', text: \"Percentage of departments that actively monitor test results for patterns suggestive of nosocomial outbreaks or hospital acquired infections\" },\n    { id: 'nosocomial', text: \"Percentage of departments that engage the laboratory if there is suggestive of nosocomial outbreaks or hospital acquired infections?\" },\n    { id: 'meet', text: \"Percentage of departments that have clinical staff and laboratory staff regularly meet (at least quarterly) to troubleshoot gaps in laboratory-clinical linkages, including specimen collection, referral, interpretation and reporting?\" },\n  ]},\n  \n  { sectionId: 'collection-all', sectionName: 'Indicator: Sample Collection (All)', sectionTargets: [\n    { id: 'informed', text: \"Percentage of patients for whom sample collection and informed consent was obtained and documented in the clinical notes\" },\n    { id: 'significant', text: \"Percentage of patients for whom a clinically significant sample was collected\" },\n    { id: 'aseptic', text: \"Percentage of patients from whom the sample was collected using aseptic and correct technique\" },\n    { id: 'antibiotics', text: \"Percentage of patients for culture whose sample was collected prior to administration of antibiotics\" },\n    { id: 'minimum', text: \"Percentage of patients for whom the minimum sample volume was collected\" },\n    { id: 'labelled', text: \"Percentage of patients with correctly labelled sample collection containers\" },\n    { id: 'form', text: \"Percentage of patients with completely and accurately completed lab request form\" },\n  ]},\n  \n  { sectionId: 'collection-blood', sectionName: 'Indicator: Sample Collection (Blood only)', sectionTargets: [\n    { id: 'washed', text: \"Percentage of patients for whom clinician taking blood sample washed hands prior to procedure\" },\n    { id: 'disinfected', text: \"Percentage of patients for whom clinician taking blood sample disinfected hands prior to procedure\" },\n    { id: 'sterile', text: \"Percentage of patients for whom clinician taking blood sample used sterile gloves for procedure\" },\n    { id: 'peripheral', text: \"Percentage of patients from whom blood was drawn from peripheral sites for blood culture\" },\n    { id: 'venipuncture', text: \"Percentage of patients for whom blood cultures were drawn from separate venipuncture sites\" },\n    { id: 'cleaned', text: \"Percentage of patients for whom puncture site was cleaned using appropriate disinfectant\" },\n    { id: 'site-dry', text: \"Percentage of patients for whom puncture site was disinfected allowed time to dry before inserting needle\" },\n    { id: 'tops-disinfected', text: \"Percentage of patients for whom the blood culture bottle tops were disinfected prior to inoculation\" },\n    { id: 'tops-dry', text: \"Percentage of patients for whom the blood culture bottle tops allowed to dry prior to inoculation\" },\n    { id: 'needles', text: \"Percentage of patients whom needles were not exchanged between blood culture collection and inoculation of blood culture bottles\" },\n    { id: 'first', text: \"Percentage of patients whom had blood culture bottles inoculated first, if blood is collected for other tests\" },\n    { id: 'drawn', text: \"Percentage of patients whom had a minimum of 2 and maximum of 3 blood cultures drawn within 24 hours\" },\n    { id: 'aerobic', text: \"Percentage of patients patients whom had an aerobic blood culture in a resource-limited setting\" },\n    { id: 'volume', text: \"Percentageof patients whom had blood collection where the volume followed the manufacturer's recommendations: typically 10mL per bottle for adults, 1-3 mL per bottle for children\" },\n  ]},\n  \n  { sectionId: 'turnaround', sectionName: 'Indicator: Turnaround time (TAT) of sample sent to lab', sectionTargets: [\n    { id: 'faeces', text: \"Turnaround time from faeces sample collection to receipt at lab (in hours)\" },\n    { id: 'urine', text: \"Turnaround time from urine sample collection to receipt at lab  (in hours)\" },\n    { id: 'blood', text: \"Turnaround time from blood sample collection to receipt at lab  (in hours)\" },\n    { id: 'transported', text: \"Percentage of samples transported to lab within target TAT\" },\n    { id: 'sent', text: \"Percentage of clinical staff that are aware of the target times for sample sent to the lab\" },\n    { id: 'store', text: \"Percentage of clinical staff that are aware of how to store a sample if there is a delay in transporting it to the lab\" },\n    { id: 'fridge', text: \"Percentage of departments that have a designated fridge for storage of samples\" },\n  ]},\n  \n  { sectionId: 'result-use', sectionName: 'Indicator: Use Test Result', sectionTargets: [\n    { id: 'folder', text: \"Percentage of patients whose records were reviewed where there is evidence that laboratory test results are placed in the patient folder\" },\n    { id: 'communicated', text: \"Percentage of patients that critical call out test results from the lab were communicated promptly to the clinician/wards and documented\" },\n    { id: 'revised', text: \"Percentage of patients where there is evidence that antibiotic treatment is revised based on the laboratory AST result\" },\n    { id: 'guidelines', text: \"Proportion of patients where antibiotic treatment followed the clinical site prescriber guidelines for common medical conditions\" },\n    { id: 'formulary', text: \"Proportion of patients where there is evidence that antibiotic treatment is consistent with medices formulary \" },\n    { id: 'engage', text: \"Percentage of wards or department that engage the laboratory if there is suggestive of nosocomial outbreaks or hospital acquired infections\" },\n    { id: 'meet', text: \"Percentage of wards or departments where clinical staff and laboratory staff meet at least quarterly\" },\n  ]},\n];\n\n// QUESTIONS\n\nconst q_1_1 = {\n  id: 'q_1_1',\n  text: 'Is a copy of the current treatment guidelines available in this department?',\n  type: 'q',\n  subType: 'y_n',\n  standards: 'F1, U1, B1',\n};\nconst q_1_2 = {\n  id: 'q_1_2',\n  text: 'Is there evidence that the ward or department actively monitors test results for patterns suggestive of nosocomial outbreaks or hospital acquired infections?',\n  type: 'q',\n  subType: 'y_n',\n  standards: 'F17, U19, B30',\n};\nconst q_1_3 = {\n  id: 'q_1_3',\n  text: 'Does the ward or department engage the laboratory if there is suggestive of nosocomial outbreaks or hospital acquired infections?',\n  type: 'q',\n  subType: 'y_n',\n  standards: 'F17, U19, B30',\n};\nconst q_1_4 = {\n  id: 'q_1_4',\n  text: 'Do the ward or department clinical staff and laboratory staff regularly meet (at least quarterly) to troubleshoot gaps in laboratory-clinical linkages, including specimen collection, referral, interpretation and reporting?',\n  type: 'q',\n  subType: 'y_n',\n  standards: 'F17, U19, B30',\n};\nconst inp_sec_1 = {\n  id: 'fac_sec_1',\n  text: 'Department Documents, Policies & Structures',\n  type: 'section',\n  subType: 'table',\n  children: [q_1_1, q_1_2, q_1_3, q_1_4]\n};\n\n\nconst q_2_1 = {\n  id: 'q_2_1',\n  text: 'Is a “Laboratory Handbook” which describes specimen collection, storage, and transportation of samples available to clinical staff in the ward or department?',\n  type: 'q',\n  subType: 'y_n',\n  standards: 'F2, U2, B2',\n};\nconst q_2_2 = {\n  id: 'q_2_2',\n  text: 'Are clinical staff aware of the target time to transfer samples (all specimen types) to the lab?',\n  type: 'q',\n  subType: 'y_n',\n  standards: 'F11, U13',\n};\nconst q_2_3 = {\n  id: 'q_2_3',\n  text: 'Are clinical staff aware of the need to store faeces and urine samples in fridge if there is a delay?',\n  type: 'q',\n  subType: 'y_n',\n  standards: 'F10, U12',\n};\nconst q_2_4 = {\n  id: 'q_2_4',\n  text: 'Is there designated fridge storage space for samples in the department/ward?',\n  type: 'q',\n  subType: 'y_n',\n  standards: 'F10, U12',\n};\nconst q_2_5 = {\n  id: 'q_2_5',\n  text: 'Are clinical staff aware of the need to store blood samples at room temperature if there is a delay?',\n  type: 'q',\n  subType: 'y_n',\n  standards: 'B23',\n};\nconst inp_sec_2 = {\n  id: 'fac_sec_2',\n  text: 'Sample Requisition, collection, transport & storage',\n  type: 'section',\n  subType: 'table',\n  children: [q_2_1, q_2_2, q_2_3, q_2_4, q_2_5]\n};\n\n\nconst q_3_01 = {\n  id: 'q_3_01',\n  text: 'Number of patients with dysentery whose records were reviewed',\n  type: 'q',\n  subType: '%',\n  standards: 'F3'\n};\nconst q_3_02 = {\n  id: 'q_3_02',\n  text: 'Number of patients reviewed who had faecal culture ordered',\n  type: 'q',\n  subType: '%',\n  standards: 'F3',\n};\nconst q_3_03 = {\n  id: 'q_3_03',\n  text: 'Number of patients for whom faecal sample collection procedure was witnessed',\n  type: 'q',\n  subType: '%',\n  standards: 'F4-F9'\n};\nconst q_3_04 = {\n  id: 'q_3_04',\n  text: 'Number of patients for whom informed consent was obtained and documented in the clinical notes before performing faeces culture',\n  type: 'q',\n  subType: '%',\n  standards: 'F4'\n};\nconst q_3_05 = {\n  id: 'q_3_05',\n  text: 'Number of patients from whom faeces were collected using aseptic technique',\n  type: 'q',\n  subType: '%',\n  standards: 'F5'\n};\nconst q_3_06 = {\n  id: 'q_3_06',\n  text: 'Number of patients for whom a minimum of 1g of feaces was collected for faeces culture',\n  type: 'q',\n  subType: '%',\n  standards: 'F6'\n};\nconst q_3_07 = {\n  id: 'q_3_07',\n  text: 'Number of patients for whom the faeces collection containers are correctly labelled including at least: patient identifiers, site, date and time of collection',\n  type: 'q',\n  subType: '%',\n  standards: 'F7'\n};\n const q_3_08 = {\n   id: 'q_3_08',\n   text: 'Number of patients for whom the lab request form was filled out completely and accurately, including at least: patient identifiers, site, date and time of collection, clinical information regarding suspected diagnosis, and contact details of requesting doctor',\n   type: 'q',\n   subType: '%',\n   standards: 'F8'\n };\nconst q_3_09 = {\n  id: 'q_3_09',\n  text: 'Number of patients for whom faeces collection is documented in the clinical notes',\n  type: 'q',\n  subType: '%',\n  standards: 'F9'\n};\nconst q_3_10 = {\n  id: 'q_3_10',\n  text: 'Number of patients for faeces culture whose records were reviewed ',\n  type: 'q',\n  subType: '%',\n  standards: 'F14, F16'\n};\nconst q_3_11  = {\n  id: 'q_3_11',\n  text: 'Number of patients for faeces culture whose records were reviewed where there is evidence that laboratory test results are placed in the patient folder',\n  type: 'q',\n  subType: '%',\n  standards: 'F14'\n};\nconst q_3_12  = {\n  id: 'q_3_12',\n  text: 'Number of patients for faeces that critical call outs regarding patients test results received from lab are promptly communicated to the clinician/wards and documented',\n  type: 'q',\n  subType: '%',\n  standards: 'F16'\n};\nconst q_3_13  = {\n  id: 'q_3_13',\n  text: 'Number of patients for faeces culture whose records were reviewed there is evidence that antibiotic treatment is revised based on the laboratory AST result',\n  type: 'q',\n  subType: '%',\n  standards: 'F16'\n};\nconst q_3_14  = {\n  id: 'q_3_14',\n  text: 'Number of patients for faeces culture whose records were reviewed and there is evidence that antibiotic treatment followed the clinical site prescriber guidelines for common medical conditions',\n  type: 'q',\n  subType: '%',\n  standards: 'F16'\n};\nconst q_3_15  = {\n  id: 'q_3_15',\n  text: 'Number of patients for faeces culture whose records were reviewed and there is evidence that antibiotic treatment is consistent with medices formulary ',\n  type: 'q',\n  subType: '%',\n  standards: 'F16'\n};\nconst inp_sec_3 = {\n  id: 'fac_sec_3',\n  text: 'Faeces Culture',\n  type: 'section',\n  subType: 'table',\n  children: [q_3_01, q_3_02, q_3_03, q_3_04, q_3_05, q_3_06, q_3_07, q_3_08, q_3_09, q_3_10, q_3_11, q_3_12, q_3_13, q_3_14, q_3_15]\n};\n\nconst questions = [\n  inp_sec_1,\n  inp_sec_2,\n  inp_sec_3,\n];\n\n\n// RESULTS\n\nconst r_1_1 = {\n  text: 'Percentage of departments that should have a copy of the current treatment guidelines',\n  question: q_1_1,\n  target: { sectionId: 'documentation', id: 'guidelines' },\n  standards: 'F1, U1, B1',\n  resources: [],\n  recommendations: [\n    'Distribute treatment guidelines to departments with none currently available'\n  ]\n}\nconst r_1_2 = {\n  text: 'Proportion of patients with dysentery, suspicion of a public health threat / outbreak or if there are associated signs of systemic infection who had faecal culture ordered',\n  numerator: q_3_02,\n  denominator: q_3_01,\n  target: { sectionId: 'collection-all', id: 'significant' },\n  standards: 'F3',\n  resources: [],\n  recommendations: [\n    '[1] Conduct clinician training on use of faecal culture to diagnose diahorreal disease',\n    '[2] Ensure uninterrupted supplies and reagents available to conduct faecal culture testing',\n    '[3] Ensure efficient systems for sample collecti\"\"&\"\"on and transport to lab',\n    '[4] Consider official training visits for facilities with <60% compliance',\n    '[5] Consider clinical audits for facilites with <40% compliance',\n  ]\n}\nconst r_1_3 = {\n  text: 'Proportion of patients with clinical indications such as suspected urinary tract infection; systemic sepsis without a clear focus or asymptomatic bacteriuria in pregnancy who had urine culture ordered',\n  question: null,\n  target: { sectionId: 'collection-all', id: 'significant' },\n  standards: 'U3',\n  resources: [],\n  recommendations: [\n    '[1] Conduct clinician training on use of urine culture to diagnose urinary tract infection',\n    '[2] Ensure uninterrupted supplies and reagents available to conduct faecal culture testing',\n    '[3] Ensure efficient systems for sample collecti\"\"&\"\"on and transport to lab',\n    '[4] Consider official training visits for facilities with <60% compliance',\n    '[5] Consider clinical audits for facilites with <40% compliance',\n  ]\n}\nconst r_1_4 = {\n  text: 'Proportion of patients with clinical suspicion of bloodstream infection who had blood culture ordered',\n  question: null,\n  target: { sectionId: 'collection-all', id: 'significant' },\n  standards: 'B3',\n  resources: [],\n  recommendations: [\n    '[1] Conduct clinician training on use of blood culture to diagnose bloodstream infections',\n    '[2] Ensure uninterrupted supplies and reagents available to conduct faecal culture testing',\n    '[3] Ensure efficient systems for sample collecti\"\"&\"\"on and transport to lab',\n    '[4] Consider official training visits for facilities with <60% compliance',\n    '[5] Consider clinical audits for facilites with <40% compliance',\n  ]\n}\nconst inp_r_sec_1 = {\n  text: 'A. Appropriate Diagnostic Test Order (Clinical Facility, by Department)',\n  results: [r_1_1]\n};\n\n\nconst r_2_1 = {\n  standards: 'F4',\n  text: 'Proportion of patients for whom informed consent was obtained and documented in the clinical notes before performing faeces culture',\n  numerator: q_3_04,\n  denominator: q_3_03,\n  target: { sectionId: 'collection-all', id: 'informed' },\n  recommendations: [\n    '[1] Remind clinicians of the importance of correct use & documentation of request forms, including informed consent, as incomplete forms will lead to samples being rejected. ',\n    '[2] Stipulate that a \"Reply\" line should be included on clinical reports that patient details, including informed consent, are essential for sample processing',\n  ],\n  resources: []\n} \nconst r_2_2 = {\n  standards: 'F5',\n  text: 'Proportion of patients from whom faeces were collected using aseptic technique',\n  numerator: q_3_05,\n  denominator: q_3_03,\n  target: { sectionId: 'collection-all', id: 'aseptic' },\n  recommendations: [\n    '[1] Remind clinicians that samples not collected aseptically, are of doubtful clinical significance. ',\n    '[2] Stipulate that a \"Reply\" line should be included on clinical reports that samples not collected aseptically, are of doubtful clinical significance, and a repeat sample must be sent ASAP',\n  ],\n  resources: []\n} \nconst r_2_3 = {\n  standards: 'F6',\n  text: 'Proportion of patients for whom a minimum of 1g of feaces was collected for faeces culture',\n  numerator: q_3_06,\n  denominator: q_3_03,\n  target: { sectionId: 'collection-all', id: 'minimum' },\n  recommendations: [\n    '[1] Remind clinicians that a suffient quantity of faecal mater is required for testing and true representation of the microbes within',\n    '[2] Stipulate that a \"Reply\" line should be included on clinical reports that samples not collected in sufficient quantity may adversly affect the results and may lead to false negatives',\n  ],\n  resources: []\n} \nconst r_2_4 = {\n  standards: 'F7',\n  text: 'Proportion of patients with correctly labelled sample collection containers',\n  numerator: q_3_07,\n  denominator: q_3_03,\n  target: { sectionId: 'collection-all', id: 'labelled' },\n  recommendations: [\n    '[1] Remind clinicians of the significance of correctly labelling patient identifiers on sample containers, as incomplete or incorrect details will lead to samples being rejected ',\n    '[2] Stipulate that a \"Reply\" line should be included on clinical reports that correct patient details on samples are essential for sample processing, those with incomplete patient identifiers must be rejected and if possible a request for a new sample sent',\n  ],\n  resources: []\n} \nconst r_2_5 = {\n  standards: 'F8',\n  text: 'Proportion of patients with completely and accurately completed lab request form',\n  numerator: q_3_08,\n  denominator: q_3_03,\n  target: { sectionId: 'collection-all', id: 'form' },\n  recommendations: [\n    '[1] Remind clinicians of the significance of correct documentation of patient and sample details on all request forms, as incomplete or incorrect details will lead to samples being rejected ',\n    '[2] Stipulate that a \"Reply\" line should be included on clinical reports that correct patient & sample details on request forms are essential for sample processing, those with incomplete patient identifiers or wrong sample details must be rejected and if possible a request for a new sample sent',\n  ],\n  resources: []\n} \nconst r_2_6 = {\n  standards: 'F9',\n  text: 'Proportion of patients with faecal collection documented in clinical notes',\n  numerator: q_3_09,\n  denominator: q_3_03,\n  target: { sectionId: 'collection-all', id: 'informed' },\n  recommendations: [\n    '[1] Remind clinicians on the importance of complete and correct sample notes and clinical history',\n    '[2] All samples must be noted and described for the material they contain on the request form to ensure correct sample processing and pairing of samples with the relevant request form',\n  ],\n  resources: []\n} \n\nconst inp_r_sec_2 = {\n  text: 'B1. Sample Collection: Faeces',\n  results: [r_2_1, r_2_2, r_2_3, r_2_4, r_2_5, r_2_6]\n};\n\nconst results = [\n  inp_r_sec_1,\n  inp_r_sec_2\n]\n\nexport { title, instructions, questions, targets, results, departments }","import { title as facilityTitle, instructions as facilityInstructions, questions as facilityQuestions } from './facility';\nimport { title as inputsTitle, instructions as inputsInstructions, questions as inputsQuestions, targets as inputsTargets, results as inputsResults, departments } from './inputs';\n\nconst sectionsMap = {\n  facility: { \n    title: facilityTitle,\n    instructions: facilityInstructions,\n    questions: facilityQuestions\n  },\n  inputs: { \n    title: inputsTitle,\n    instructions: inputsInstructions,\n    questions: inputsQuestions,\n    requiresSetup: true,\n    targets: inputsTargets,\n    results: inputsResults,\n    departments\n  }\n}\n\nexport default sectionsMap;","// section and preface may have children, q may have subQs\nconst types = ['q', 'section', 'preface'];\nconst subTypes = ['box', 'y_n'];\n\nconst title = 'Facility-Level Assessment';\n\nconst instructions = [\n  'Please complete the following, from the \"Technical Scorecard: Laboratory Clinical Interface AMR Scorecard\", Section 1 in C. Clinical Site Assessment.',\n  'The corresponding data sources are indicated in the section headers for reference. The relevant standards are indicated after each question in parentheses.'\n];\n\nconst questions = [{\n  id: 'fac_sec_1',\n  text: 'Oversight Committee',\n  dataSource: '[LC1.1]',\n  type: 'section',\n  children: [{\n    id: 'fac_q_1',\n    text: 'Does the clinical facility have an oversight committee?',\n    standards: 'F1, U1, B1',\n    tags: [],\n    weight: 1,\n    recs: [],\n    resources: [],\n    type: 'q',\n    subType: 'y_n',\n    // expectedValue: true,\n    // revealIf: true,\n    subQs: [{\n        id:'fac_q_1_sub_preface', text:'Does the committee:', type:'preface'\n      },{\n        id:'fac_q_1_c1', type:'q', subType:'box',\n        text:'Develop/revise treatment guidelines',\n        recs:[],\n      },{\n        id:'fac_q_1_c2', type:'q', subType:'box',\n        text:'Use cumulative AST data to inform guidelines',\n        recs:[],\n      },{\n        id:'fac_q_1_c3', type:'q', subType:'box',\n        text:'Review antibiotic consumption data',\n        recs:[],\n      },{\n        id:'fac_q_1_c4', type:'q', subType:'box',\n        text:'Review data from AMS rounds',\n        recs:[],\n      },\n    ]},\n  ],\n},\n\n{\n  id: 'fac_sec_2',\n  text: 'Lab Handbook',\n  dataSource: '[LC1.2 - 1.4]',\n  type: 'section',\n  children: [{\n    id: 'fac_q_2',\n    text: 'Does the clinical facility have a “Laboratory Handbook” which describes specimen collection, storage, and transportation of samples?',\n    standards: 'F2, U2, B2',\n    tags: [],\n    weight: 1,\n    recs: [],\n    resources: [],\n    type: 'q',\n    subType: 'y_n',\n    subQs: [{\n      id:'fac_q_2_sub_preface', text:'Does the handbook state:', type:'preface'\n    },{\n      id:'fac_q_2_c1', type:'q', subType:'box', tags:['f','u','b'], standards: 'F4, U4, B4',\n      text: `Informed consent should be obtained before collection of faeces, urine or blood for culture`\n    },{\n      id:'fac_q_2_c2', type:'q', subType:'box', tags:['u','b'], standards: 'F5',\n      text: `Urine and blood should be collected before administration of antibiotics `\n    },{\n      id:'fac_q_2_c3', type:'q', subType:'box', tags:['f'], standards: 'U5, B5',\n      text: `Faeces should be collected using aseptic technique `\n    },{\n      id:'fac_q_2_c4', type:'q', subType:'box', tags:['f'], standards: 'F6',\n      text: `Minimum of 1g of faeces should be collected for faeces culture`\n    },{\n      id:'fac_q_2_c5', type:'q', subType:'box', tags:['u'], standards: 'U8',\n      text: `A minimum of 3 mL urine should be collected for urine culture`\n    },{\n      id:'fac_q_2_c6', type:'q', subType:'box', tags:['b'], standards: 'B6',\n      text: `Handwashing should be performed prior to performing blood collection for culture`\n    },{\n      id:'fac_q_2_c7', type:'q', subType:'box', tags:['b'], standards: 'B7',\n      text: `Hands should be disinfected prior to performing a blood culture`\n    },{\n      id:'fac_q_2_c8', type:'q', subType:'box', tags:['b'], standards: 'B8',\n      text: `Sterile gloves should be used when performing a blood culture`\n    },{\n      id:'fac_q_2_c9', type:'q', subType:'box', tags:['b'], standards: 'B9',\n      text: `Blood cultures should be drawn from peripheral sites`\n    },{\n      id:'fac_q_2_c10', type:'q', subType:'box', tags:['b'], standards: 'B10',\n      text: `Serial blood cultures should be collected from separate venipuncture sites`\n    },{\n      id:'fac_q_2_c11', type:'q', subType:'box', tags:['b'], standards: 'B11',\n      text: `Puncture site should be cleaned properly as per manufacturer recommended technique and using appropriate disinfectant`\n    },{\n      id:'fac_q_2_c12', type:'q', subType:'box', tags:['b'], standards: 'B14',\n      text: `Bottle-top should be disinfected and disinfectant should be allowed to dry prior to inoculation`\n    },{\n      id:'fac_q_2_c13', type:'q', subType:'box', tags:['b'], standards: 'B15',\n      text: `Needles should not be exchanged between blood culture collection and inoculation of blood culture bottles`\n    },{\n      id:'fac_q_2_c14', type:'q', subType:'box', tags:['b'], standards: 'B17',\n      text: `Minimum of 2 and maximum of 3 Blood cultures should be drawn within 24 hours`\n    },{\n      id:'fac_q_2_c15', type:'q', subType:'box', tags:['b'], standards: 'B19',\n      text: `The volume of blood collected should follow the manufacturer's recommendations: typically 10mL per bottle for adults, 1-3 mL per bottle for children`\n    },{\n      id:'fac_q_2_sub_preface_d', type:'preface', text:'Are collection containers correctly labelled for:'\n    },{\n      id:'fac_q_2_d1', type:'q', subType:'box', tags:['f'], standards: 'F7',\n      text: `Faeces`\n    },{\n      id:'fac_q_2_d2', type:'q', subType:'box', tags:['b'], standards: 'B20',\n      text: `Blood`\n    },{\n      id:'fac_q_2_d3', type:'q', subType:'box', tags:['u'], standards: 'U9',\n      text: `Urine`\n    },{\n      id:'fac_q_2_sub_preface_e', type:'preface', text:'Are samples delivered to the laboratory as soon as possible and within the recommended time periods for:'\n    },{\n      id:'fac_q_2_e1', type:'q', subType:'box', tags:['f'], standards: 'F11',\n      text: `Faeces`\n    },{\n      id:'fac_q_2_e2', type:'q', subType:'box', tags:['b'], standards: 'B24',\n      text: `Blood`\n    },{\n      id:'fac_q_2_e3', type:'q', subType:'box', tags:['u'], standards: 'U16',\n      text: `Urine`\n    }]\n  },{\n    id:'fac_q_3_preface', type:'preface',\n    text:'Do the facility treatment guidelines include the following requirements:',\n    children: [{\n      id: 'fac_q_3a',\n      text: 'To do faecal culture if there is dysentery, suspicion of a public health threat / outbreak or if there are associated signs of systemic infection?',\n      standards: 'F3',\n      tags: ['f'],\n      weight: 1,\n      recs: [],\n      resources: [],\n      type: 'q',\n      subType: 'y_n'\n    },{\n      id: 'fac_q_3b',\n      text: 'To do urine culture if there are clinical indications such as suspected urinary tract infection; systemic sepsis without a clear focus or asymptomatic bacteriuria in pregnancy?',\n      standards: 'U3',\n      tags: ['u'],\n      weight: 1,\n      recs: [],\n      resources: [],\n      type: 'q',\n      subType: 'y_n'\n    },{\n      id: 'fac_q_3c',\n      text: 'To do blood culture with clinical suspicion of blood stream infection?',\n      standards: 'B3',\n      tags: ['b'],\n      weight: 1,\n      recs: [],\n      resources: [],\n      type: 'q',\n      subType: 'y_n'\n    }]\n  }],\n},\n\n{\n  id: 'fac_sec_3',\n  text: 'Lab Request form',\n  dataSource: '[LC1.5]',\n  type: 'section',\n  children: [{\n    id:'fac_q_4_preface', type:'preface', standards: 'F8, U10, B21',\n    text:'Does the laboratory request form include:'\n  },{\n    id:'fac_q_4a', type:'q', subType:'box',\n    text: `Patient identifiers`\n  },{\n    id:'fac_q_4b', type:'q', subType:'box',\n    text: `Site name`\n  },{\n    id:'fac_q_4c', type:'q', subType:'box',\n    text: `Date of admission`\n  },{\n    id:'fac_q_4d', type:'q', subType:'box',\n    text: `Date & time of collection`\n  },{\n    id:'fac_q_4e', type:'q', subType:'box',\n    text: `Clinical information regarding suspected diagnosis`\n  },{\n    id:'fac_q_4f', type:'q', subType:'box',\n    text: `Contact details of requesting doctor`\n  }],\n}];\n\nexport { title, instructions, questions }","const getTargetId = (targetSectionId, targetId) => \n  `target-${targetSectionId}--${targetId}`;\n  \nconst getTableCellId = (department, question) => \n  `cell-${department.id}--${question.id}`;\n\n  export {\n    getTargetId,\n    getTableCellId\n  }","import React from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Table from 'react-bootstrap/Table';\nimport sectionsMap from './sections';\nimport { getTableCellId, getTargetId } from './helperFunctions'\n\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport _ from 'lodash'\n\nconst DEV = false;\n\nconst radioNoTag = '_no';\n\nclass AssessmentSection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const { departments } = sectionsMap[this.props.section];\n    const selectedDepts = DEV && departments ? departments.slice(0,4) : []\n    this.state = { contents: null, selectedDepts, begun: false, warnings: [] };\n\n    this.toggleSubQs = this.toggleSubQs.bind(this);\n    this.selectDept = this.selectDept.bind(this);\n    this.removeDept = this.removeDept.bind(this);\n    this.begin = this.begin.bind(this);\n\n    this.processElement = this.processElement.bind(this);\n    this.getSection = this.getSection.bind(this);\n    this.getQTable = this.getQTable.bind(this);\n\n    this.qs = [];\n  }\n\n  componentDidMount() {\n    const { requiresSetup } = sectionsMap[this.props.section];\n\n\n    const targetData = {};\n    if (!requiresSetup || DEV) {\n\n      if (DEV && requiresSetup) {\n        const { targets } = sectionsMap[this.props.section];\n\n        targets.forEach(tSection => \n          tSection.sectionTargets.forEach(t => {\n            _.set(targetData, [tSection.sectionId, t.id], 100);\n          })\n        )\n      }\n\n\n      this.generateQuestions(targetData);\n    }\n  }\n\n  generateQuestions(targetData) {\n    const { questions } = sectionsMap[this.props.section];\n    const contents = questions.map(el => this.processElement(el));\n    this.setState({ contents });\n    \n    const sectionObj = {\n      questions: this.qs,\n      departments: this.state.selectedDepts,\n      targetData\n    }\n    this.props.sendMap(this.props.section, sectionObj);\n  }\n\n  getInstructions() {\n    const { title, instructions } = sectionsMap[this.props.section];\n    return (\n      <div className='instructions'>\n        <h3>{title}</h3>\n        {instructions.map((sect, i) =><span className='instruction' key={'inst-'+i}>{sect}</span>)}\n        {!DEV && !this.state.begun && this.getDeptSelection()}\n        {!DEV && !this.state.begun && this.getTargetSetting()}\n        {!DEV && !this.state.begun && this.getStartButton()}\n      </div>\n    )\n  }\n\n  processElement(el) {\n    const { type } = el;\n\n    switch (type) {\n      case 'section':\n        return this.getSection(el);\n    \n      case 'preface':\n        return this.getPreface(el);\n    \n      case 'q':\n        const { id, subType, expectedValue = true } = el;\n        this.qs.push(el);\n\n        if (subType === 'box') {\n          return this.getQuestionBox(el);\n        } else if (subType === 'y_n') {\n          return this.getQuestionYN(el);\n        } else if (subType === '%') {\n          return this.getQuestionPerc(el);\n        }\n    \n      default:\n        console.error('Unknown element type: ', el);\n        break;\n    }\n  }\n\n  getSection(el) {\n    const { children, id, text, subType, dataSource='' } = el;\n    let content;\n    if (subType === 'table') {\n      content = this.getQTable(children);\n    } else {\n      content = _.map(children, this.processElement);\n    }\n    return (\n      <Card key={'sect-'+id}>\n        <Card.Header>\n            <Accordion.Toggle as={Button} variant='link' eventKey={id}>\n              {dataSource + ' ' + text}  \n              {/* {dataSource ? `${dataSource} ${text}` : text} */}\n            </Accordion.Toggle>\n        </Card.Header>\n        <Accordion.Collapse eventKey={id}>\n          <Card.Body>\n            {content}\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    )\n  }\n\n  getQTable(children) {\n\n    return (\n      <Table striped bordered responsive>\n      <thead>\n        <tr>\n          <th></th>\n          {this.state.selectedDepts.map(d => {\n            return <th key={'th-'+d.name}>{d.name}</th>\n          })}\n        </tr>\n      </thead>\n      <tbody>\n        {children.map((q, i) => {\n          this.qs.push(q);\n          const { id, text, tags, standards, subType } = q;\n          const question = ( // TODO: KEY\n            <>\n              {!!tags && !!tags.length &&\n                <span className='specimen-tags'>\n                  {tags.map(t => <i key={'tag-'+q.id+'-'+t} className={t} />)}\n                </span>\n              }\n              <span className='response-text'>{text}</span>\n              {!!standards && <span className='standard-tag'> ({standards})</span>}\n            </>\n          )\n\n          return (\n            <tr key={'tr-'+i+'-'+q.id}>\n              <td>{question}</td>\n              {this.state.selectedDepts.map(d => {\n\n                const uid = getTableCellId(d, q);\n                let content;\n                switch (subType) {\n                  case '%':\n                    let dv = null;\n                    if (DEV) {\n                      dv = Math.floor(Math.random() * 100);\n                    }\n                    content = <Form.Control type='number' min={0} id={uid} defaultValue={dv} />;\n                    break;\n\n                  case 'y_n':\n                    content = (\n                      <>\n                        <Form.Check name={uid} type='radio' id={uid} label='yes' />\n                        <Form.Check name={uid} type='radio' id={uid+radioNoTag} label='no' />\n                      </>\n                      )\n                    break;\n                \n                  default:\n                    console.error('Table not implemented for subtype: ' + subType);\n                    return;\n                }\n\n                return (\n                  <td key={uid}>\n                    {content}\n                  </td>\n                )\n              })}\n            </tr>\n          )\n        })}\n        </tbody>\n      </Table>\n    )\n  }\n\n  getPreface({ id, text, standards, children }) {\n    return (\n      <div key={id}>\n        <Form.Label>\n          <span className='question-text'>{text}</span>\n          {!!standards && <span className='standard-tag'> ({standards})</span>}\n        </Form.Label>\n        {!!children && !!children.length &&\n          <div className='child-questions'>\n            {children.map(childEl => this.processElement(childEl))}\n          </div>\n        }\n      </div>\n    )\n  }\n\n  getQuestionBox({ id, text, tags, standards }) {\n    const label = (\n      <>\n        {!!tags && !!tags.length &&\n          <span className='specimen-tags'>\n            {tags.map(t => <i key={'tag-'+id+'-'+t} className={t} />)}\n          </span>\n        }\n        <span className='response-text'>{text}</span>\n        {!!standards && <span className='standard-tag'> ({standards})</span>}\n      </>\n    )\n    return (\n      <Form.Check type='checkbox' \n        id={id}\n        key={id}\n        label={label}\n        // name={id}\n      />\n    )\n  }\n\n  getQuestionPerc({ id, text, tags, standards }) {\n    // UNUSED\n    const label = (\n      <>\n        {!!tags && !!tags.length &&\n          <span className='specimen-tags'>\n            {tags.map(t => <i key={'tag-'+id+'-'+t} className={t} />)}\n          </span>\n        }\n        <span className='response-text'>{text}</span>\n        {!!standards && <span className='standard-tag'> ({standards})</span>}\n      </>\n    )\n    return (\n      <>\n        <Form.Control \n          id={id}\n          key={id}\n          // label={label}\n          type='number' min={0} max={100}\n        />\n        {label}\n      </>\n    )\n  }\n\n  toggleSubQs(e) {\n    // ASSUMES SHOW IF ANSWER IS YES\n    let { id } = e.target;\n    let show = true;\n    if (id.endsWith(radioNoTag)) {\n      id = id.slice(0, id.length - radioNoTag.length);\n      show = false;\n    }\n    // this.setState({ [id]: show });\n\n    // TODO: use refs?\n    const parent = document.querySelector(`#${id}_parent`);\n    parent.classList.toggle('show-sub-questions', show);\n  }\n\n  getQuestionYN({ id, text, standards, subQs, tags }) {\n\n    const onChange = subQs ? this.toggleSubQs : null;\n    return (\n      <div key={id} id={id + '_parent'} className='parent-questions'>\n        <Form.Group>\n          <Form.Label>\n            {!!tags && !!tags.length &&\n              <span className='specimen-tags'>\n                {tags.map(t => <i key={'tag-'+id+'-'+t} className={t} />)}\n              </span>\n            }\n            <span className='question-text'>{text}</span>\n            {!!standards && <span className='standard-tag'> ({standards})</span>}\n          </Form.Label>\n\n          <div className='response-text'>\n              <Form.Check onChange={onChange} name={id} inline type='radio' id={id} label='yes' />\n              <Form.Check onChange={onChange} name={id} inline type='radio' id={id+radioNoTag} label='no' />\n          </div>\n        </Form.Group>\n\n        {!!subQs && \n          <div className='sub-questions child-questions'>\n            {subQs.map(childEl => this.processElement(childEl))}\n          </div>\n        }\n      </div>\n    )\n  }\n\n  selectDept(selectedDepts, item) {\n    this.setState({ selectedDepts });\n  }\n  \n  removeDept(selectedDepts, item) {\n    // const depts = [...this.state.selectedDepts];\n    this.setState({ selectedDepts });\n  }\n\n  begin() {\n    const fourDepts = this.state.selectedDepts.length === 4;\n    \n    const { targets } = sectionsMap[this.props.section];\n    const targetData = {};\n\n    const targetsComplete = targets.every(tSection => \n      tSection.sectionTargets.every(t => {\n        const { sectionId } = tSection;\n        const uid = getTargetId(sectionId, t.id);\n        const target = document.querySelector(`#${uid}`);\n        if (!target.value) {\n          return false;\n        }\n        const val = Number(target.value);\n        const validTarget = !isNaN(val) && val >= 0 && val <= 100;\n\n        // _.set\n        if (!targetData[sectionId]) {\n          targetData[sectionId] = {};\n        }\n        // we use this opportunity to record all target values for use if the section is complete\n        targetData[sectionId][t.id] = val;\n\n        return validTarget;\n      })\n    )\n\n    const warnings = [];\n    if (!fourDepts) {\n      warnings.push('select four departments to assess')\n    }\n    if (!targetsComplete) {\n      warnings.push('ensure that all target percentages are set as integers less than or equal to 100')\n    }\n\n    const begun = fourDepts && targetsComplete;\n    this.setState({ warnings, begun }, () => {\n      if (begun) {\n        this.generateQuestions(targetData);\n      }\n    });\n  }\n\n  getStartButton() {\n    const { requiresSetup } = sectionsMap[this.props.section];\n    if (!requiresSetup) {\n      return;\n    }\n\n    let warningText = null;\n    if (this.state.warnings.length) {\n      warningText = `Please ${this.state.warnings.join(' and ')}.`;\n    }\n    return (\n      <> \n        <div className='warnings text-danger'>{warningText}</div>\n        <Button\n          onClick={this.begin} \n        >\n          Begin Assessment\n        </Button>\n      </>\n    )\n  }\n\n  getDeptSelection() {\n    const { departments } = sectionsMap[this.props.section];\n    if (!departments) {\n      return;\n    }\n\n    return (\n      <div className='mt-3'>\n        <h4>Select four departments to assess</h4>\n        <Multiselect\n          options={departments}\n          placeholder='select departments'\n          avoidHighlightFirstOption={true}\n          selectionLimit={4}\n          showCheckbox={true}\n          closeOnSelect={false}\n          closeIcon='cancel'\n          //selectedValues={1} // Preselected value to persist in dropdown\n          onSelect={this.selectDept}\n          onRemove={this.removeDept}\n          displayValue=\"name\" // Property name to display in the dropdown options\n        />\n      </div>\n    )\n  }\n\n  getTargetSetting() {\n    const { targets } = sectionsMap[this.props.section];\n    if (!targets) {\n      return;\n    }\n\n    return (\n      <div className='mt-3'>\n        <h4>Set targets for the assessment</h4>\n          {targets.map(tSection => (\n            <div className='target-section' key={tSection.sectionName}>\n              <h5>{tSection.sectionName}</h5>\n              {tSection.sectionTargets.map((t, idx) => (\n                <div key={getTargetId(tSection.sectionId, t.id)}>\n                  <Form.Control\n                    className='target'\n                    // label={t.text}\n                    id={getTargetId(tSection.sectionId, t.id)}\n                    type='number' min={0} max={100} defaultValue={100}\n                    />\n                  <Form.Label>{t.text}</Form.Label>\n                  <br/>  \n                </div>\n              ))}\n              <br/>\n            </div>\n          ))}\n      </div>\n    )\n  }\n\n  render() {\n    const { departments, targets, requiresSetup } = sectionsMap[this.props.section];\n    const showContents = this.state.begun || !requiresSetup;\n\n    return (\n      <Accordion id={`${this.props.section}-section`}>\n        {this.getInstructions()}\n        {(showContents || DEV) && this.state.contents}\n      </Accordion>\n    );\n  }\n}\n\nexport default AssessmentSection;\n","import React from 'react';\n\nclass Results extends React.Component {\n\n  getMissedItem({ id, text, standards }) {\n\n    // return <div key={q.id}>{q.text}</div>;\n    return (\n      <div className='missed-standard' key={id}>\n        <h5>Missed Standard:</h5>\n        <span className='negate-tag'>+</span>\n        {!!standards && <span className='standard-tag'> {standards}: </span>}\n        <span className='text'>\n          \"{text}\"\n        </span>\n      </div>\n    );\n  }\n\n  render() {\n\n    return (\n      <div className='results'>\n        <h3>Facility-Level Assessment</h3>\n        <h4>Recommendations & Resources</h4>\n\n        <div className='prio-section prio-1'>\n\n        <h4 className='priority'>Priority 1</h4>\n        <div>\n          <div className='missed-standard'>\n            <h5>Missed Standard:</h5>\n            <span className='negate-tag'>+</span>\n            <span className='standard-tag'>U3:</span>\n            <span className='text'>\n              'Do the facility treatment guidelines include the following requirements: To do a urine culture if there are clinical indications such as suspected urinary tract infection; systemic sepsis without a clear focus or asymptomatic bacteriuria in pregnancy'\n            </span>\n          </div>\n          <div className='recommendation'>\n            <h5>Recommendation:</h5>\n            <span className='text'>\n              Develop or revise treatment guidelines to include this requirement and provide training to clinical staff\n            </span>\n          </div>\n          <div className='resources'>\n  \n          </div>\n        </div>\n\n        </div>\n\n\n        <div className='prio-section prio-2'>\n\n        <h4 className='priority'>Priority 2</h4>\n        <div>\n          <div className='missed-standard'>\n            <h5>Missed Standard:</h5>\n            <span className='negate-tag'>+</span>\n            <span className='standard-tag'>B9:</span>\n            <span className='text'>\n              'Does the Laboratory Handbook include the following: Blood cultures should be drawn from peripheral sites'\n            </span>\n          </div>\n          <div className='recommendation'>\n            <h5>Recommendation:</h5>\n            <span className='text'>\n              Include the requirement for blood to be drawn from peripheral sites\n            </span>\n          </div>\n          <div className='resources'>\n            <h5>Resources:</h5>\n            <a href='http://www.euro.who.int/__data/assets/pdf_file/0005/268790/WHO-guidelines-on-drawing-blood-best-practices-in-phlebotomy-Eng.pdf?ua-1' target='#'>WHO guidelines on drawing blood: best practices in phlebotomy</a>\n          </div>\n        </div>\n\n        </div>\n\n\n        <div className='prio-section prio-3'>\n\n        <h4 className='priority'>Priority 3</h4>\n        <div>\n          <div className='missed-standard'>\n            <h5>Missed Standard:</h5>\n            <span className='negate-tag'>+</span>\n            <span className='standard-tag'>F4, U4, B4:</span>\n            <span className='text'>\n              'Does the Laboratory Handbook include the following: Informed consent should be obtained before collection of faeces, urine or blood for culture'\n            </span>\n          </div>\n          <div className='recommendation'>\n            <h5>Recommendation:</h5>\n            <span className='text'>\n              Include the requirement for obtaining informed consent prior to faeces, urine or blood collection\n            </span>\n          </div>\n          <div className='resources'>\n            <h5>Resources:</h5>\n            <a href='http://www.pathology.uct.ac.za/sites/default/files/image_tool/images/231/documents/NHLS_Handbook_2015.pdf' target='#'>NHLS Laboratory Handbook (South Africa)</a>\n          </div>\n        </div>\n\n        </div>\n\n        <h4>All Missed Standards:</h4>\n        {this.props.missedFQs.map(q => this.getMissedItem(q))}\n\n      </div>\n    );\n  }\n}\n\nexport default Results;","import React from 'react';\nimport sectionsMap from './sections';\nimport Form from 'react-bootstrap/Form';\nimport Table from 'react-bootstrap/Table';\n\n\nimport _ from 'lodash';\n\n// const NEAR_THRESHHOLD = .8;\n\nclass ResultsTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      nearThreshhold: 90,\n    };\n\n    this.updateThreshhold = this.updateThreshhold.bind(this);\n  }\n\n  getSectionTable(rSection) {\n    const { departments } = sectionsMap[this.props.section];\n\n\n    let depts = _.keys(_.get(rSection, 'results.0.responseData', {}));\n    depts = depts.map(dStr => _.find(departments, d => d.id === dStr));\n    return (\n      <div>\n\n        <Table striped bordered responsive>\n          <thead>\n            <tr>\n              <th></th>\n              <th>Target</th>\n              {depts.map(d => <th key={d.name}>{d.name}</th>)}\n              <th>Total Actual</th>\n            </tr>\n          </thead>\n          <tbody>\n            {rSection.results.map(r => this.getResultRow(r))}\n          </tbody>\n          </Table>\n      </div>\n    );\n  }\n\n  getResultRow(result) {\n    const { text, standards, targetValue, actualPerc, responseData } = result;\n    const question = (\n      <>\n        <span className='response-text'>{text}</span>\n        {!!standards && <span className='standard-tag'> ({standards})</span>}\n      </>\n    );\n    return (\n      <tr key={text}>\n        <td>{question}</td>\n        <td>{targetValue+'%'}</td>\n        {_.map(responseData, (responseValue, dep) => this.getResponseCell(responseValue, result, dep))}\n        {this.getResponseCell(actualPerc, result, 'total')}\n      </tr>\n    );\n  }\n\n  getResponseCell(responseValue, result, dep) {\n    const isPerc = result.numerator;\n\n    const { targetValue } = result;\n    let perfClass = '';\n    let content = null;\n\n    const nearCutoff = (targetValue * this.state.nearThreshhold/100);\n\n    if (isPerc || dep === 'total') {\n      content = Math.round(responseValue) + '%';\n      if (responseValue >= targetValue) {\n        perfClass = 'ahead ';\n      } else if (responseValue >= nearCutoff) {\n        perfClass = 'near ';\n      } else {\n        perfClass = 'behind ';\n      }\n    } else {\n\n      content = !!responseValue ? 'Yes' : 'No';\n      if (!!responseValue) {\n        perfClass = 'ahead ';\n      } else {\n        perfClass = 'behind ';\n      }\n    }\n\n    const classes = 'response-value ' + perfClass + dep;\n\n    return <td className={classes} key={dep}>{content}</td>\n  }\n\n  updateThreshhold(e) {\n    this.setState({ nearThreshhold: e.target.value });\n  }\n  getLegend() {\n    const threshhold = <span className='threshhold'>{this.state.nearThreshhold}%</span>;\n    return (\n      <div className='legend'>\n        <h4 className='text-center mb-2'>Legend</h4>\n        <h5><span className='example ahead'></span>Meets Target</h5>\n        <h5><span className='example near'></span>Near Target<strong>*</strong></h5>\n        <h5><span className='example behind'></span>Behind Target</h5>\n        <Form.Group >\n          <Form.Label>\n            <strong>*</strong>indicates that the value is at least {threshhold} of the target value\n          </Form.Label>\n          <Form.Control type=\"range\" custom\n            onChange={this.updateThreshhold}\n            defaultValue={this.state.nearThreshhold}\n            min={1}\n            max={99}\n          />\n          <em>(drag slider to adjust)</em>\n        </Form.Group>\n      </div>\n    )\n  }\n\n  render() {\n\n    return (\n      <div className='results-table'>\n        {this.getLegend()}\n        {this.props.resultSections.map(rSection => {\n\n          return (\n            <div key={rSection.text}>\n              <h4 className='mt-3'>{rSection.text}</h4>\n              {this.getSectionTable(rSection)}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nexport default ResultsTable;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AssessmentSection from './AssessmentSection';\nimport Results from './Results';\nimport ResultsTable from './ResultsTable';\nimport sectionsMap from './sections';\nimport { getTargetId, getTableCellId } from './helperFunctions';\n\nimport _ from 'lodash'\n\nconst DEV = false;\n\n// TODO:\n// - feed in correct text for results missed standards, prioritize\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { \n      warnings: [],\n      submitted: false,\n      missedFQs: null,\n      inputsResults: null,\n    };\n\n    this.sendMap = this.sendMap.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  sendMap(section, sectionObj) {\n    this[section] = sectionObj;\n  }\n\n  submit() {\n    if (!this['facility'] || !this['inputs']) {\n      const warnings = ['You must begin all assessment sections before submitting.'];\n      this.setState({ warnings })\n      return;\n    }\n\n\n    const missedFQs = this['facility'].questions.filter(q => {\n      const correctAnswerGiven = document.querySelector(`#${q.id}:checked`);\n      return !correctAnswerGiven;\n    });\n\n    // process inputs sections\n    const inputSectionObj = this['inputs'];\n    const { results: inputResultSections } = sectionsMap['inputs'];\n\n    inputSectionObj.questions.forEach(q => {\n      // add responses\n      q.responses = {};\n      let TOTAL = 0;\n      inputSectionObj.departments.forEach(d => {\n        const uid = getTableCellId(d, q);\n        if (q.subType === 'y_n') {\n          const correctAnswerGiven = !!document.querySelector(`#${uid}:checked`);\n          q.responses[d.id] = correctAnswerGiven;\n          TOTAL += correctAnswerGiven;\n        } else if (q.subType === '%') {\n          const el = document.querySelector(`#${uid}`);\n          let val = el ? Number(el.value) : null;\n          q.responses[d.id] = val;\n          TOTAL += val||0;\n        }\n      });\n      // q.responses.TOTAL = TOTAL;\n    })\n\n    inputResultSections.forEach(rSect => {\n      rSect.results.forEach(r => {\n        const { target, question, numerator, denominator } = r;\n        if (!target) {\n          console.error('Cannot calculate result without target: ', r);\n        }\n        // _.get\n        r.targetValue = inputSectionObj.targetData[target.sectionId][target.id];\n        // r.responseData = {};\n\n        if (question) {\n\n          r.responseData = r.question.responses;\n          let answered = 0;\n          let yeses = 0;\n          _.each(r.responseData, resp => {\n            if (!_.isNil(resp)) {\n              answered++;\n            }\n            if (!!resp) {\n              yeses++;\n            }\n          });\n\n          r.actualPerc = !answered ? '?' : (yeses/answered) * 100;\n\n        } else if (numerator && denominator) { // it's a % type result\n\n          r.responseData = {};\n          let totalNum = 0;\n          let totalDenom = 0;\n          _.each(r.numerator.responses, (numV, dept) => {\n            let perc = null;\n            const denomV = _.get(r, ['denominator', 'responses', dept]);\n            if (_.isNil(numV) || _.isNil(denomV)) {\n              console.warn('Empty num or denom val');\n              // _.set(r.responseData, dept, '?');\n              perc = '?';\n            } else {\n              totalNum += numV;\n              totalDenom += denomV;\n              perc = (numV / denomV) * 100;\n            }\n\n            _.set(r.responseData, dept, perc);\n          });\n\n          r.actualPerc = !totalDenom ? '?' : (totalNum / totalDenom) * 100\n\n        } else {\n          console.error('Cannot calculate result without a linked question or num/denom: ', r);\n        }\n      })\n    });\n\n    this.setState({ \n      submitted: true,\n      missedFQs,\n      inputsResults: inputResultSections,\n      warnings: []\n    });;\n  }\n\n  getFacilityTab() {\n    if (this.state.submitted) {\n      return <Results missedFQs={this.state.missedFQs} />;\n    }\n    return (\n      <AssessmentSection\n        sendMap={this.sendMap}\n        section='facility'\n      />\n    )\n  }\n\n\n  getInputsTab() {\n    if (this.state.submitted) {\n      return (\n        <ResultsTable \n          resultSections={this.state.inputsResults}\n          section='inputs'\n        />);\n    }\n    return (\n      <AssessmentSection\n        sendMap={this.sendMap}\n        section='inputs'\n      />\n    )\n  }\n\n  getSubmitTab() {\n    const submittedMessage = !this.state.submitted ? null :\n      <div>Assessment sumbitted. See section tabs for results.</div>;\n    return (\n      <div>\n        <div className='warnings text-danger'>{this.state.warnings.join('\\n')}</div>\n        {submittedMessage}\n\n        <Button\n          disabled={this.state.submitted}\n          onClick={this.submit} \n          variant='outline-primary' size='lg'\n        >\n          {this.state.submitted ? 'Submitted' : 'Submit Assessment'}\n        </Button>\n      </div>\n    )\n  }\n\n  render() {\n    const submitTitle = this.state.submitted ? 'Submit': 'Submit';\n    let facilityTitle = 'Clinical Facility Level';\n    let inputsTitle = 'Clinical Facility Data Inputs';\n    if (this.state.submitted) {\n      facilityTitle += ' [RESULTS]';\n      inputsTitle += ' [RESULTS]';\n    }\n\n    const defaultActiveKey = DEV ? 'submit' : 'facility';\n\n    return (\n      <div className='App'>\n        <h2>AMR Continuous Quality Improvement Assessment</h2>\n        <Tabs defaultActiveKey={defaultActiveKey}>\n          <Tab eventKey='facility' title={facilityTitle}>\n            {this.getFacilityTab()}\n           </Tab>\n          <Tab eventKey='inputs' title={inputsTitle}>\n            {this.getInputsTab()}\n          </Tab>\n          <Tab eventKey='submit' title={submitTitle}>\n            {this.getSubmitTab()}\n          </Tab>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}